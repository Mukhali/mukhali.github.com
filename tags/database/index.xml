<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Database on 当然我在扯淡</title><link>https://mukhali.github.io/tags/database/</link><description>Recent content in Database on 当然我在扯淡</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sun, 13 Jan 2019 11:08:30 +0800</lastBuildDate><atom:link href="https://mukhali.github.io/tags/database/index.xml" rel="self" type="application/rss+xml"/><item><title>Golang操作Sqlite</title><link>https://mukhali.github.io/2019/golang%E6%93%8D%E4%BD%9Csqlite/</link><pubDate>Sun, 13 Jan 2019 11:08:30 +0800</pubDate><guid>https://mukhali.github.io/2019/golang%E6%93%8D%E4%BD%9Csqlite/</guid><description>0x00 引言 再简单的事情，也需要有人去做。
0x01 代码 package main import ( &amp;quot;database/sql&amp;quot; &amp;quot;fmt&amp;quot; _ &amp;quot;github.com/mattn/go-sqlite3&amp;quot; &amp;quot;os&amp;quot; ) func main() { type Person struct { name string age int } person := Person{&amp;quot;mike&amp;quot;,18} fmt.Println(person) os.Remove(&amp;quot;./foo.db&amp;quot;) db, err := sql.Open(&amp;quot;sqlite3&amp;quot;, &amp;quot;./foo.db&amp;quot;) checkErr(err) defer db.Close() //插入数据 _, err = db.Exec(&amp;quot;create table userinfo (uid text not null primary key, username text, departname text, created text)&amp;quot;) checkErr(err) stmt, err := db.Prepare(&amp;quot;INSERT INTO userinfo(uid, username, departname, created) values(?</description></item><item><title>Sqlite3数据库合并</title><link>https://mukhali.github.io/2019/sqlite3%E6%95%B0%E6%8D%AE%E5%BA%93%E5%90%88%E5%B9%B6/</link><pubDate>Wed, 09 Jan 2019 16:02:17 +0800</pubDate><guid>https://mukhali.github.io/2019/sqlite3%E6%95%B0%E6%8D%AE%E5%BA%93%E5%90%88%E5%B9%B6/</guid><description>0x00 引言 再简单的事情，也需要有人去做。
0x01 需求 存在多个数据库，需要合并，数据库中相同表的结构是一样的。 主要是使用了Sqlite3的系统表sqlite_master。
0x02 Python 代码 # coding=utf-8 import sys, sqlite3, os def merge_tables(tables_file_a, tables_file_b, con_file_a): print(&amp;quot;Start Merge Tables&amp;quot;) j = 0 while j &amp;lt; len(tables_file_b): if not tables_file_b[j] in tables_file_a: cur_table_file_a = con_file_a.cursor() try: cur_table_file_a.execute(tables_file_b[j][3:-3]) except: print(&amp;quot;Error: &amp;quot; + tables_file_b[j][3:-3]) j += 1 else: j += 1 print(&amp;quot;All Tables Merged!&amp;quot;) def merge_index(tables_file_a, tables_file_b, con_file_a): print(&amp;quot;Start Merge Index&amp;quot;) j = 0 while j &amp;lt; len(tables_file_b): if not tables_file_b[j] in tables_file_a: cur_table_file_a = con_file_a.</description></item></channel></rss>